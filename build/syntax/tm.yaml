postfix: .thulium
default: default

tokenizer:
  root: 
    - include: comment # 注释
    - include: command # 命令
    - include: track   # 音轨

  comment:
    - regex: ^//
      action:
        cases:
          '@eos':
            token: comment.marker
          '@default':
            token: comment.marker
            next: comment.line

  comment.line:
    # 分割线中央的字段被认为是乐章名
    - regex: -{3,}.*[^-]-{3,}$
      action:
        token: '@rematch'
        switchTo: comment.section
    # 普通的注释内容
    - - .*$
      - comment.default
      - '@pop'

  comment.section:
    - regex: -{3,}
      action:
        cases:
          '@eos': 
            token: comment.marker
            next: '@pop'
          '@default':
            token: comment.marker
    - - .*[^-]
      - section.name

  command:
    - - ^# *
      - command.marker
      - command.general

  command.general:
    - regex: (?i)end *$
      action:
        token: command.keyword
        next: '@pop'
    - regex: (?i)include *
      action:
        token: command.keyword
        switchTo: library.include
    - regex: (?i)(function|notation) *
      action: 
        token: command.keyword
        switchTo: library.code
        nextEmbedded: text/javascript

  library.include:
    - - '[a-zA-Z]\w* *$'
      - library.package
      - '@pop'

  library.code:
    - regex: ^#
      action: 
        token: '@rematch'
        next: '@pop'
        nextEmbedded: '@pop'

  track:
    - regex: <:?(?=[a-zA-Z\s])
      action:
        token: track.marker
        next: track.head
    - - '.'
      - '@rematch'
      - track.content

  track.head:
    - - :?>
      - track.marker
      - '@pop'
    - - '[a-zA-Z]\w*:'
      - '@rematch'
      - track.name
    - - ','
      - track.marker
    - - '[a-zA-Z]\w*'
      - track.instrument
      - track.instrument

  track.name:
    - - ':'
      - track.marker
      - '@pop'
    - - \w+
      - track.name

  track.instrument:
    - - '[,>]'
      - '@rematch'
      - '@pop'
    - include: track.content

  track.content:
    - - $\s*^
      - default
      - '@pop'
    - - \}
      - subtrack.curly
      - '@pop'
    - include: function.nonalias
    - include: subtrack

  subtrack:
    - - \{\d+\*
      - '@rematch'
      - subtrack.head.repeat
    - - \{
      - '@rematch'
      - subtrack.head

  subtrack.head:
    - - \{
      - subtrack.curly
      - track.content

  subtrack.head.repeat:
    - - \{
      - subtrack.curly
    - - \d+
      - subtrack.repeat
    - - \*
      - subtrack.repeat.marker
      - track.content

  function.nonalias:
    - - '[a-zA-Z][a-zA-Z\d]*\('
      - '@rematch'
      - function.minus
    - - '\([a-zA-Z][a-zA-Z\d]*:'
      - '@rematch'
      - function.zero

  function.minus:
    - - '[a-zA-Z][a-zA-Z\d]*'
      - function.name
    - - \(
      - function.marker
      - function.argument

  function.zero:
    - - '[a-zA-Z][a-zA-Z\d]*'
      - function.name
    - - \(
      - function.marker
    - - ':'
      - function.marker
      - function.argument

  function.argument:
    - - '[\)\]]'
      - function.marker
      - '@pop'
    - - ','
      - function.marker
    - include: expression
    - include: subtrack
    - - \[
      - function.marker
      - function.argument
    - - \"
      - string.marker
      - string.inside

  expression:
    - - \)
      - function.marker
      - '@pop'
    - - '[+\-*/]'
      - number.operator
    - - (\d+(\.\d+)?|\.\d+)
      - number.constant
    - include: function.nonalias
    - - \(
      - function.marker
      - expression

  string.inside:
    - - \"
      - string.marker
      - '@pop'
    - - \\[\s\S]
      - string.escape
    - - '[\s\S]'
      - string.default



