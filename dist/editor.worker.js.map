{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/map.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/async.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services sync","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/winjs.base.js","webpack:///(webpack)/buildin/global.js"],"names":["this","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","main","__webpack_require__","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","extendStatics","__extends","setPrototypeOf","__proto__","Array","b","__","constructor","create","_encode","ch","charCodeAt","toString","toUpperCase","encodeURIComponent2","str","encodeURIComponent","replace","encodeNoop","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","_driveLetterPath","_upperCaseDrive","_driveLetter","uri_URI","URI","schemeOrData","authority","path","query","fragment","scheme","ret","test","Error","_validateUri","isUri","thing","_makeFsPath","with","change","_URI","parse","match","exec","decodeURIComponent","file","platform","idx","indexOf","substring","from","components","skipEncoding","_asFormatted","toJSON","res","$mid","fsPath","external","revive","data","result","_fsPath","_formatted","common_uri","_super","_this","apply","arguments","uri","toLowerCase","substr","encoder","parts","push","userinfo","lastIdx","join","Position","lineNumber","column","equals","other","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","clone","lift","pos","isIPosition","obj","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","Math","min","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","start","end","isIRange","areIntersectingOrTouching","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementHash","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","diff_hasOwnProperty","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_originalIds","m_modifiedIds","m_forwardHistory","m_reverseHistory","ComputeUniqueIdentifiers","originalSequenceLength","modifiedSequenceLength","hashTable","currentUniqueId","originalElementHash","modifiedElementHash","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","ShiftChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","mergedDiffs","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","index","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","map_extends","Touch","StringIterator","_value","_pos","reset","key","next","hasNext","cmp","PathIterator","_from","_to","justSeps","_fwd","_bwd","aPos","aLen","thisPos","TernarySearchTreeNode","mid","element","TernarySearchTree","segments","_iter","forPaths","forStrings","clear","_root","undefined","set","node","iter","val","oldElement","delete","stack","_a","dir","parent_1","findSubstr","candidate","findSuperstr","forEach","callback","_forEach","ResourceMap","map","Map","ignoreCase","resource","toKey","has","size","clb","values","forEachable","keys","LRUCache","limit","ratio","_limit","_ratio","checkTrim","AsNew","peek","None","trimOld","round","LinkedMap","_map","_head","_tail","_size","touch","item","previous","addItemLast","AsOld","addItemFirst","remove","removeItem","shift","callbackfn","thisArg","current","bind","newSize","currentSize","fromJSON","_i","data_1","String","fromCharCode","diffComputer_extends","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","MarkerSequence","buffer","startMarkers","endMarkers","offset","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","txt","defaultValue","len","chCode","firstNonWhitespaceIndex","startIndex","lastNonWhitespaceIndex","getCharSequence","endIndex","startMarker","endMarker","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldIgnoreTrimWhitespace","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","Date","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","col","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","midStop","midStart","low","high","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","dispose","getText","onEvents","e","_lineStarts","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","splice","insertText","insertLines","split","newLengths","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","StateMachine","edges","maxCharCode","maxState","to","states","_b","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","source","RegExp","createWordRegExp","once","fn","didCall","lifecycle_empty","freeze","lifecycle_dispose","first","rest","isArray","Disposable","_toDispose","_register","t","outstandingPromiseErrors","ReferenceCollection","references","acquire","reference","counter","createReferencedObject","destroyReferencedObject","ImmortalReference","winjs_base","addEventListener","details","detail","id","parent","handler","setTimeout","errors","errorId","error","exception","onUnexpectedError","console","log","errorHandler","ErrorHandler","listeners","unexpectedErrorHandler","addListener","listener","_removeListener","emit","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedExternalError","isPromiseCanceledError","transformErrorForSerialization","$isError","stacktrace","canceledName","Event","Node","LinkedList","_first","_last","unshift","insert","atTheEnd","newNode","oldLast","prev","oldFirst","anchor","iterator","done","toArray","_disposable","event_Emitter","Emitter","_options","_event","thisArgs","disposables","_listeners","firstListener","onFirstListenerAdd","onFirstListenerDidAdd","onListenerDidAdd","_noop","_disposed","onLastListenerRemove","fire","event","_deliveryQueue","event_1","EventMultiplexer","hasListeners","events","emitter","hook","fns","fns_1","toDisposable","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","flush","mapEvent","filterEvent","filter","ChainableEvent","each","latch","firstCall","shouldEmit","cache","on","Relay","disposable","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","type","getHashCode","isModifierKey","isDuplicateModifierCase","ChordKeybinding","firstPart","chordPart","SelectionDirection","selection_extends","cancellation_CancellationToken","CancellationToken","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","shortcutEvent","context","handle","clearTimeout","isCancellationRequested","onCancellationRequested","Cancelled","Severity","MarkerSeverity","cancellation_MutableToken","MutableToken","_isCancelled","cancel","_emitter","CancellationTokenSource","_token","Token","language","KeyCode","standaloneBase_KeyMod","KeyMod","chord","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","slice","getWordAtPosition","wordDefinition","wordAtText","textOffset","lastIndex","word","getWordAtPosSlow","getWordAtPosFast","getWordAtText","global","flags","multiline","ensureValidWordDefinition","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","all","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","as","computeDirtyDiff","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","changes_1","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","label","noAutoAccept","overwriteBefore","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","methods","prop","Promise","resolve","then","__WEBPACK_AMD_REQUIRE_ARRAY__","foreignModule","catch","fmr","method","args","wrapError","importScripts","monaco","editor","languages","Uri","async_extends","async_Throttler","Throttler","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","onComplete_1","err","async_ShallowCancelThenPromise","SimpleThrottler","wrap","promiseTask","ThrottledDelayer","defaultDelay","throttler","trigger","delay","Delayer","timeout","completionPromise","onSuccess","task","cancelTimeout","isTriggered","Barrier","_isOpen","_promise","_completePromise","warn","isOpen","open","wait","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","always","winjsPromiseOrPromiseLike","f","is","e1","progress","_","Queue","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","factory","consume","iLimitedTask","promise","consumed","ResourceQueue","queues","queueFor","queue_1","onFinished","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","ThrottledEmitter","throttle","suspended","resume","lastEvent","hasLastEvent","simpleWorker_extends","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","reply","_send","vsWorker","handleMessage","serializedMessage","JSON","_handleMessage","msg","seq","replyMessage","requestMessage","strMsg","stringify","simpleWorker_SimpleWorkerServer","SimpleWorkerClient","workerFactory","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","self","require","getConfig","requirejs","contexts","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","cc","ee","baseUrl","paths","vs","catchError","handlerModule","__webpack_exports__","initialized","editorWorker","simpleWorker","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","umask","webpackEmptyContext","code","Platform","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","rawNlsConfig","NODE_ENV","nlsConfig","resolved","availableLanguages","locale","_translationsConfigFile","navigator","userAgent","Web","Mac","Windows","Linux","isWindows","isWeb","globals","__winjs_exports","_modules","_winjs","deps","exportsPassedIn","depsValues","dep","window","_Global","actualSetImmediate","hasWinRT","markSupportedForProcessing","func","supportedForProcessing","_setImmediate","setImmediate","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","member","writable","setName","defineProperties","_rootNamespace","createNamespace","parentNamespace","currentNamespace","namespaceFragments","namespaceName","defineWithParent","Namespace","LazyStates","uninitialized","working","_lazy","_moduleDefine","publicNS","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","Class","_Base","ErrorFromName","createEventProperty","eventPropStateName","userHandler","wrapper","evt","removeEventListener","EventMixinEvent","timeStamp","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","useCapture","eventListeners","dispatchEvent","eventValue","_createEventProperty","createEventProperties","props","nop","_traceAsyncOperationStarting","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","setNonUserCodeExceptions","promiseEventListeners","errorET","tagWithStack","tag","thenPromise","errorPromise","exceptionPromise","completePromise","state_created","state_working","state_waiting","state_waiting_canceled","state_canceled","state_canceling","state_success_notify","state_success","state_error_notify","state_error","error_number","enter","_setState","_completed","_error","_notify","_progress","_setCompleteValue","_setErrorValue","completed","setCompleteValue","setErrorValue","waitedUpon","ThenPromise","_state","pushListener","_errorId","_chainedError","callonerror","detailsForHandledError","handlesOnError","_cancelAction","CompletePromise","notifySuccess","_cleanupAction","ErrorPromise","notifyError","PromiseStateMachine","_nextState","_run","onComplete","onError","onProgress","detailsForChainedError","detailsForError","_setChainedErrorValue","_setExceptionValue","detailsForException","targetState","createErrorDetails","errorValue","_isException","setErrorInfo","exceptionValue","asyncOpID","onerrorDetails","MS_ASYNC_OP_STATUS_SUCCESS","ex","errorID","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","onerrorDetailsGenerator","isException","staticCanceledPromise","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","init","oncancel","_oncancel","eventType","capture","any","complete","canceled","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","timeoutMS","timeoutWithPromise","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","TPromise","PPromise","g","Function","eval"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \tthis[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"main\": 1\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"5QBA\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as platform from './platform.js';\nfunction _encode(ch) {\n    return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\nfunction encodeNoop(str) {\n    return str.replace(/[#?]/, _encode);\n}\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret) {\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nvar _driveLetterPath = /^\\/[a-zA-Z]:/;\nvar _upperCaseDrive = /^(\\/)?([A-Z]:)/;\nvar _driveLetter = /^[a-zA-Z]:/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = path || _empty;\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\n    };\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (platform.isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        // Ensure that path starts with a slash\n        // or that it is at least a slash\n        if (_driveLetter.test(path)) {\n            path = _slash + path;\n        }\n        else if (path[0] !== _slash) {\n            // tricky -> makes invalid paths\n            // but otherwise we have to stop\n            // allowing relative paths...\n            path = _slash + path;\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1,\n            fsPath: this.fsPath,\n            external: this.toString(),\n        };\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport default URI;\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    return _URI;\n}(URI));\n/**\n * Compute `fsPath` for the given uri\n * @param uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (_driveLetterPath.test(uri.path)) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (platform.isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponent2\n        : encodeNoop;\n    var parts = [];\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        parts.push(scheme, ':');\n    }\n    if (authority || scheme === 'file') {\n        parts.push('//');\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                parts.push(encoder(userinfo));\n            }\n            else {\n                parts.push(encoder(userinfo.substr(0, idx)), ':', encoder(userinfo.substr(idx + 1)));\n            }\n            parts.push('@');\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            parts.push(encoder(authority));\n        }\n        else {\n            parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        var m = _upperCaseDrive.exec(path);\n        if (m) {\n            if (m[1]) {\n                path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n            }\n            else {\n                path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n            }\n        }\n        // encode every segement but not slashes\n        // make sure that # and ? are always encoded\n        // when occurring in paths - otherwise the result\n        // cannot be parsed back again\n        var lastIdx = 0;\n        while (true) {\n            var idx = path.indexOf(_slash, lastIdx);\n            if (idx === -1) {\n                parts.push(encoder(path.substring(lastIdx)));\n                break;\n            }\n            parts.push(encoder(path.substring(lastIdx, idx)), _slash);\n            lastIdx = idx + 1;\n        }\n    }\n    if (query) {\n        parts.push('?', encoder(query));\n    }\n    if (fragment) {\n        parts.push('#', encoder(fragment));\n    }\n    return parts.join(_empty);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Range` from an `IRange`.\n     */\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        var aStartLineNumber = a.startLineNumber | 0;\n        var bStartLineNumber = b.startLineNumber | 0;\n        if (aStartLineNumber === bStartLineNumber) {\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            if (aStartColumn === bStartColumn) {\n                var aEndLineNumber = a.endLineNumber | 0;\n                var bEndLineNumber = b.endLineNumber | 0;\n                if (aEndLineNumber === bEndLineNumber) {\n                    var aEndColumn = a.endColumn | 0;\n                    var bEndColumn = b.endColumn | 0;\n                    return aEndColumn - bEndColumn;\n                }\n                return aEndLineNumber - bEndLineNumber;\n            }\n            return aStartColumn - bStartColumn;\n        }\n        return aStartLineNumber - bStartLineNumber;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementHash: function (pos) { return a[pos]; }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_originalIds = [];\n        this.m_modifiedIds = [];\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        this.ComputeUniqueIdentifiers();\n    }\n    LcsDiff.prototype.ComputeUniqueIdentifiers = function () {\n        var originalSequenceLength = this.OriginalSequence.getLength();\n        var modifiedSequenceLength = this.ModifiedSequence.getLength();\n        this.m_originalIds = new Array(originalSequenceLength);\n        this.m_modifiedIds = new Array(modifiedSequenceLength);\n        // Create a new hash table for unique elements from the original\n        // sequence.\n        var hashTable = {};\n        var currentUniqueId = 1;\n        var i;\n        // Fill up the hash table for unique elements\n        for (i = 0; i < originalSequenceLength; i++) {\n            var originalElementHash = this.OriginalSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, originalElementHash)) {\n                // No entry in the hashtable so this is a new unique element.\n                // Assign the element a new unique identifier and add it to the\n                // hash table\n                this.m_originalIds[i] = currentUniqueId++;\n                hashTable[originalElementHash] = this.m_originalIds[i];\n            }\n            else {\n                this.m_originalIds[i] = hashTable[originalElementHash];\n            }\n        }\n        // Now match up modified elements\n        for (i = 0; i < modifiedSequenceLength; i++) {\n            var modifiedElementHash = this.ModifiedSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, modifiedElementHash)) {\n                this.m_modifiedIds[i] = currentUniqueId++;\n                hashTable[modifiedElementHash] = this.m_modifiedIds[i];\n            }\n            else {\n                this.m_modifiedIds[i] = hashTable[modifiedElementHash];\n            }\n        }\n    };\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return this.m_originalIds[originalIndex] === this.m_modifiedIds[newIndex];\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return this.m_originalIds[index1] === this.m_originalIds[index2];\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return this.m_modifiedIds[index1] === this.m_modifiedIds[index2];\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.ShiftChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex, modifiedIndex;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.ShiftChanges = function (changes) {\n        var mergedDiffs;\n        do {\n            mergedDiffs = false;\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n            }\n            // Build up the new list (we have to build a new list because we\n            // might have changes we can merge together now)\n            var result = new Array();\n            var mergedChangeArr = [null];\n            for (var i = 0; i < changes.length; i++) {\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    mergedDiffs = true;\n                    result.push(mergedChangeArr[0]);\n                    i++;\n                }\n                else {\n                    result.push(changes[i]);\n                }\n            }\n            changes = result;\n        } while (mergedDiffs);\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.OriginalSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.ModifiedSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        var result = null;\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from './uri.js';\nexport function values(forEachable) {\n    var result = [];\n    forEachable.forEach(function (value) { return result.push(value); });\n    return result;\n}\nexport function keys(map) {\n    var result = [];\n    map.forEach(function (value, key) { return result.push(key); });\n    return result;\n}\nexport function getOrSet(map, key, value) {\n    var result = map.get(key);\n    if (result === void 0) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nvar StringIterator = /** @class */ (function () {\n    function StringIterator() {\n        this._value = '';\n        this._pos = 0;\n    }\n    StringIterator.prototype.reset = function (key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        this._pos += 1;\n        return this;\n    };\n    StringIterator.prototype.join = function (parts) {\n        return parts.join('');\n    };\n    StringIterator.prototype.hasNext = function () {\n        return this._pos < this._value.length - 1;\n    };\n    StringIterator.prototype.cmp = function (a) {\n        var aCode = a.charCodeAt(0);\n        var thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    };\n    StringIterator.prototype.value = function () {\n        return this._value[this._pos];\n    };\n    return StringIterator;\n}());\nexport { StringIterator };\nvar PathIterator = /** @class */ (function () {\n    function PathIterator() {\n    }\n    PathIterator.prototype.reset = function (key) {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    };\n    PathIterator.prototype.hasNext = function () {\n        return this._to < this._value.length;\n    };\n    PathIterator.prototype.join = function (parts) {\n        return parts.join('/');\n    };\n    PathIterator.prototype.next = function () {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        var justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            var ch = this._value.charCodeAt(this._to);\n            if (ch === PathIterator._fwd || ch === PathIterator._bwd) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    };\n    PathIterator.prototype.cmp = function (a) {\n        var aPos = 0;\n        var aLen = a.length;\n        var thisPos = this._from;\n        while (aPos < aLen && thisPos < this._to) {\n            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    };\n    PathIterator.prototype.value = function () {\n        return this._value.substring(this._from, this._to);\n    };\n    PathIterator._fwd = '/'.charCodeAt(0);\n    PathIterator._bwd = '\\\\'.charCodeAt(0);\n    return PathIterator;\n}());\nexport { PathIterator };\nvar TernarySearchTreeNode = /** @class */ (function () {\n    function TernarySearchTreeNode() {\n    }\n    TernarySearchTreeNode.prototype.isEmpty = function () {\n        return !this.left && !this.mid && !this.right && !this.element;\n    };\n    return TernarySearchTreeNode;\n}());\nvar TernarySearchTree = /** @class */ (function () {\n    function TernarySearchTree(segments) {\n        this._iter = segments;\n    }\n    TernarySearchTree.forPaths = function () {\n        return new TernarySearchTree(new PathIterator());\n    };\n    TernarySearchTree.forStrings = function () {\n        return new TernarySearchTree(new StringIterator());\n    };\n    TernarySearchTree.prototype.clear = function () {\n        this._root = undefined;\n    };\n    TernarySearchTree.prototype.set = function (key, element) {\n        var iter = this._iter.reset(key);\n        var node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.str = iter.value();\n        }\n        node = this._root;\n        while (true) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.str = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.str = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.str = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        var oldElement = node.element;\n        node.element = element;\n        return oldElement;\n    };\n    TernarySearchTree.prototype.get = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.element : undefined;\n    };\n    TernarySearchTree.prototype.delete = function (key) {\n        var iter = this._iter.reset(key);\n        var stack = [];\n        var node = this._root;\n        // find and unset node\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.element = undefined;\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    var _a = stack.pop(), dir = _a[0], parent_1 = _a[1];\n                    switch (dir) {\n                        case 1:\n                            parent_1.left = undefined;\n                            break;\n                        case 0:\n                            parent_1.mid = undefined;\n                            break;\n                        case -1:\n                            parent_1.right = undefined;\n                            break;\n                    }\n                    node = parent_1;\n                }\n                break;\n            }\n        }\n    };\n    TernarySearchTree.prototype.findSubstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        var candidate;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.element || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.element || candidate;\n    };\n    TernarySearchTree.prototype.findSuperstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                var ret = new TernarySearchTree(this._iter);\n                ret._root = node.mid;\n                return ret;\n            }\n        }\n        return undefined;\n    };\n    TernarySearchTree.prototype.forEach = function (callback) {\n        this._forEach(this._root, [], callback);\n    };\n    TernarySearchTree.prototype._forEach = function (node, parts, callback) {\n        if (node) {\n            // left\n            this._forEach(node.left, parts, callback);\n            // node\n            parts.push(node.str);\n            if (node.element) {\n                callback(node.element, this._iter.join(parts));\n            }\n            // mid\n            this._forEach(node.mid, parts, callback);\n            parts.pop();\n            // right\n            this._forEach(node.right, parts, callback);\n        }\n    };\n    return TernarySearchTree;\n}());\nexport { TernarySearchTree };\nvar ResourceMap = /** @class */ (function () {\n    function ResourceMap() {\n        this.map = new Map();\n        this.ignoreCase = false; // in the future this should be an uri-comparator\n    }\n    ResourceMap.prototype.set = function (resource, value) {\n        this.map.set(this.toKey(resource), value);\n    };\n    ResourceMap.prototype.get = function (resource) {\n        return this.map.get(this.toKey(resource));\n    };\n    ResourceMap.prototype.has = function (resource) {\n        return this.map.has(this.toKey(resource));\n    };\n    Object.defineProperty(ResourceMap.prototype, \"size\", {\n        get: function () {\n            return this.map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceMap.prototype.clear = function () {\n        this.map.clear();\n    };\n    ResourceMap.prototype.delete = function (resource) {\n        return this.map.delete(this.toKey(resource));\n    };\n    ResourceMap.prototype.forEach = function (clb) {\n        this.map.forEach(clb);\n    };\n    ResourceMap.prototype.values = function () {\n        return values(this.map);\n    };\n    ResourceMap.prototype.toKey = function (resource) {\n        var key = resource.toString();\n        if (this.ignoreCase) {\n            key = key.toLowerCase();\n        }\n        return key;\n    };\n    ResourceMap.prototype.keys = function () {\n        return keys(this.map).map(URI.parse);\n    };\n    return ResourceMap;\n}());\nexport { ResourceMap };\nexport var Touch;\n(function (Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch || (Touch = {}));\nvar LinkedMap = /** @class */ (function () {\n    function LinkedMap() {\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    }\n    LinkedMap.prototype.clear = function () {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    };\n    LinkedMap.prototype.isEmpty = function () {\n        return !this._head && !this._tail;\n    };\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedMap.prototype.has = function (key) {\n        return this._map.has(key);\n    };\n    LinkedMap.prototype.get = function (key, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    };\n    LinkedMap.prototype.set = function (key, value, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key: key, value: value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n    };\n    LinkedMap.prototype.delete = function (key) {\n        return !!this.remove(key);\n    };\n    LinkedMap.prototype.remove = function (key) {\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.shift = function () {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        var item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\n        var current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            current = current.next;\n        }\n    };\n    LinkedMap.prototype.values = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.value);\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedMap.prototype.keys = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.key);\n            current = current.next;\n        }\n        return result;\n    };\n    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n    public keys(): IterableIterator<K> {\n        let current = this._head;\n        let iterator: IterableIterator<K> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<K> {\n                if (current) {\n                    let result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n\n    public values(): IterableIterator<V> {\n        let current = this._head;\n        let iterator: IterableIterator<V> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<V> {\n                if (current) {\n                    let result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    */\n    LinkedMap.prototype.trimOld = function (newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        var current = this._head;\n        var currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        current.previous = void 0;\n    };\n    LinkedMap.prototype.addItemFirst = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n    };\n    LinkedMap.prototype.addItemLast = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n    };\n    LinkedMap.prototype.removeItem = function (item) {\n        if (item === this._head && item === this._tail) {\n            this._head = void 0;\n            this._tail = void 0;\n        }\n        else if (item === this._head) {\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            this._tail = item.previous;\n        }\n        else {\n            var next = item.next;\n            var previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n    };\n    LinkedMap.prototype.touch = function (item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = void 0;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = void 0;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = void 0;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = void 0;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n        }\n    };\n    LinkedMap.prototype.toJSON = function () {\n        var data = [];\n        this.forEach(function (value, key) {\n            data.push([key, value]);\n        });\n        return data;\n    };\n    LinkedMap.prototype.fromJSON = function (data) {\n        this.clear();\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var _a = data_1[_i], key = _a[0], value = _a[1];\n            this.set(key, value);\n        }\n    };\n    return LinkedMap;\n}());\nexport { LinkedMap };\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    function LRUCache(limit, ratio) {\n        if (ratio === void 0) { ratio = 1; }\n        var _this = _super.call(this) || this;\n        _this._limit = limit;\n        _this._ratio = Math.min(Math.max(0, ratio), 1);\n        return _this;\n    }\n    Object.defineProperty(LRUCache.prototype, \"limit\", {\n        get: function () {\n            return this._limit;\n        },\n        set: function (limit) {\n            this._limit = limit;\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LRUCache.prototype, \"ratio\", {\n        get: function () {\n            return this._ratio;\n        },\n        set: function (ratio) {\n            this._ratio = Math.min(Math.max(0, ratio), 1);\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.get = function (key) {\n        return _super.prototype.get.call(this, key, Touch.AsNew);\n    };\n    LRUCache.prototype.peek = function (key) {\n        return _super.prototype.get.call(this, key, Touch.None);\n    };\n    LRUCache.prototype.set = function (key, value) {\n        _super.prototype.set.call(this, key, value, Touch.AsNew);\n        this.checkTrim();\n    };\n    LRUCache.prototype.checkTrim = function () {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    };\n    return LRUCache;\n}(LinkedMap));\nexport { LRUCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { LRUCache } from './map.js';\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<|>|&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0, idx = -1;\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return (match && regexp.lastIndex === 0);\n}\nexport function regExpContainsBackreference(regexpValue) {\n    return !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport var canNormalize = typeof (''.normalize) === 'function';\nvar nfcCache = new LRUCache(10000); // bounded to 10000 elements\nexport function normalizeNFC(str) {\n    return normalize(str, 'NFC', nfcCache);\n}\nvar nfdCache = new LRUCache(10000); // bounded to 10000 elements\nexport function normalizeNFD(str) {\n    return normalize(str, 'NFD', nfdCache);\n}\nvar nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str, form, normalizedCache) {\n    if (!canNormalize || !str) {\n        return str;\n    }\n    var cached = normalizedCache.get(str);\n    if (cached) {\n        return cached;\n    }\n    var res;\n    if (nonAsciiCharactersPattern.test(str)) {\n        res = str.normalize(form);\n    }\n    else {\n        res = str;\n    }\n    // Use the cache for fast lookup\n    normalizedCache.set(str, res);\n    return res;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareIgnoreCase(a, b) {\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (isUpperAsciiLetter(codeA)) {\n            codeA += 32;\n        }\n        if (isUpperAsciiLetter(codeB)) {\n            codeB += 32;\n        }\n        var diff = codeA - codeB;\n        if (diff === 0) {\n            // equal -> ignoreCase\n            continue;\n        }\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compare(a.toLowerCase(), b.toLowerCase());\n        }\n    }\n    if (a.length < b.length) {\n        return -1;\n    }\n    else if (a.length > b.length) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction substrEquals(a, aStart, aEnd, b, bStart, bEnd) {\n    while (aStart < aEnd && bStart < bEnd) {\n        if (a[aStart] !== b[bStart]) {\n            return false;\n        }\n        aStart += 1;\n        bStart += 1;\n    }\n    return true;\n}\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a, b) {\n    var aEnd = a.length;\n    var bEnd = b.length;\n    var aStart = aEnd - bEnd;\n    if (aStart === 0) {\n        return a === b ? aEnd : 0;\n    }\n    else if (aStart < 0) {\n        bEnd += aStart;\n        aStart = 0;\n    }\n    while (aStart < aEnd && bEnd > 0) {\n        if (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n            return bEnd;\n        }\n        bEnd -= 1;\n        aStart += 1;\n    }\n    return 0;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text, n) {\n    if (text.length < n) {\n        return text;\n    }\n    var re = /\\b/g;\n    var i = 0;\n    while (re.test(text)) {\n        if (text.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    return text.substring(i).replace(/^\\s/, empty);\n}\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nvar EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nvar COLOR_START = /\\x1b\\[\\d+m/g; // Color\nvar COLOR_END = /\\x1b\\[0?m/g; // Color\nexport function removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(EL, '');\n        str = str.replace(COLOR_START, '');\n        str = str.replace(COLOR_END, '');\n    }\n    return str;\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function stripUTF8BOM(str) {\n    return startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false; // return early if target or query are undefined\n    }\n    if (target.length < query.length) {\n        return false; // impossible for query to be contained in target\n    }\n    var queryLen = query.length;\n    var targetLower = target.toLowerCase();\n    var index = 0;\n    var lastIndexOf = -1;\n    while (index < queryLen) {\n        var indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars) {\n    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar MarkerSequence = /** @class */ (function () {\n    function MarkerSequence(buffer, startMarkers, endMarkers) {\n        this.buffer = buffer;\n        this.startMarkers = startMarkers;\n        this.endMarkers = endMarkers;\n    }\n    MarkerSequence.prototype.getLength = function () {\n        return this.startMarkers.length;\n    };\n    MarkerSequence.prototype.getElementHash = function (i) {\n        return this.buffer.substring(this.startMarkers[i].offset, this.endMarkers[i].offset);\n    };\n    MarkerSequence.prototype.getStartLineNumber = function (i) {\n        if (i === this.startMarkers.length) {\n            // This is the special case where a change happened after the last marker\n            return this.startMarkers[i - 1].lineNumber + 1;\n        }\n        return this.startMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getStartColumn = function (i) {\n        return this.startMarkers[i].column;\n    };\n    MarkerSequence.prototype.getEndLineNumber = function (i) {\n        return this.endMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getEndColumn = function (i) {\n        return this.endMarkers[i].column;\n    };\n    return MarkerSequence;\n}());\nvar LineMarkerSequence = /** @class */ (function (_super) {\n    __extends(LineMarkerSequence, _super);\n    function LineMarkerSequence(lines) {\n        var _this = this;\n        var buffer = '';\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var pos = 0, i = 0, length_1 = lines.length; i < length_1; i++) {\n            buffer += lines[i];\n            var startColumn = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            var endColumn = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n            startMarkers.push({\n                offset: pos + startColumn - 1,\n                lineNumber: i + 1,\n                column: startColumn\n            });\n            endMarkers.push({\n                offset: pos + endColumn - 1,\n                lineNumber: i + 1,\n                column: endColumn\n            });\n            pos += lines[i].length;\n        }\n        _this = _super.call(this, buffer, startMarkers, endMarkers) || this;\n        return _this;\n    }\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (startIndex, endIndex) {\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var index = startIndex; index <= endIndex; index++) {\n            var startMarker = this.startMarkers[index];\n            var endMarker = this.endMarkers[index];\n            for (var i = startMarker.offset; i < endMarker.offset; i++) {\n                startMarkers.push({\n                    offset: i,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset)\n                });\n                endMarkers.push({\n                    offset: i + 1,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset) + 1\n                });\n            }\n        }\n        return new MarkerSequence(this.buffer, startMarkers, endMarkers);\n    };\n    return LineMarkerSequence;\n}(MarkerSequence));\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementHash(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementHash(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, [\n            new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)\n        ]));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid;\n        var midStop;\n        var midStart;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nimport { Position } from '../core/position.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    Object.defineProperty(MirrorTextModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var i = 0, len = changes.length; i < len; i++) {\n            var change = changes[i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model) {\n        var stateMachine = getStateMachine();\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = classifier.get(chCode);\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    var end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { once } from './functional.js';\nexport var empty = Object.freeze({\n    dispose: function () { }\n});\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return {\n        dispose: function () {\n            for (var _i = 0, fns_1 = fns; _i < fns_1.length; _i++) {\n                var fn = fns_1[_i];\n                fn();\n            }\n        }\n    };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n    }\n    Disposable.prototype.dispose = function () {\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        this._toDispose.push(t);\n        return t;\n    };\n    return Disposable;\n}());\nexport { Disposable };\nvar ReferenceCollection = /** @class */ (function () {\n    function ReferenceCollection() {\n        this.references = Object.create(null);\n    }\n    ReferenceCollection.prototype.acquire = function (key) {\n        var _this = this;\n        var reference = this.references[key];\n        if (!reference) {\n            reference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n        }\n        var object = reference.object;\n        var dispose = once(function () {\n            if (--reference.counter === 0) {\n                _this.destroyReferencedObject(reference.object);\n                delete _this.references[key];\n            }\n        });\n        reference.counter++;\n        return { object: object, dispose: dispose };\n    };\n    return ReferenceCollection;\n}());\nexport { ReferenceCollection };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { TPromise } from './winjs.base.js';\n// ------ BEGIN Hook up error listeners to winjs promises\nvar outstandingPromiseErrors = {};\nfunction promiseErrorHandler(e) {\n    //\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\n    //\n    var details = e.detail;\n    var id = details.id;\n    // If the error has a parent promise then this is not the origination of the\n    //  error so we check if it has a handler, and if so we mark that the error\n    //  was handled by removing it from outstandingPromiseErrors\n    //\n    if (details.parent) {\n        if (details.handler && outstandingPromiseErrors) {\n            delete outstandingPromiseErrors[id];\n        }\n        return;\n    }\n    // Indicate that this error was originated and needs to be handled\n    outstandingPromiseErrors[id] = details;\n    // The first time the queue fills up this iteration, schedule a timeout to\n    // check if any errors are still unhandled.\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\n        setTimeout(function () {\n            var errors = outstandingPromiseErrors;\n            outstandingPromiseErrors = {};\n            Object.keys(errors).forEach(function (errorId) {\n                var error = errors[errorId];\n                if (error.exception) {\n                    onUnexpectedError(error.exception);\n                }\n                else if (error.error) {\n                    onUnexpectedError(error.error);\n                }\n                console.log('WARNING: Promise with no error callback:' + error.id);\n                console.log(error);\n                if (error.exception) {\n                    console.log(error.exception.stack);\n                }\n            });\n        }, 0);\n    }\n}\nTPromise.addEventListener('error', promiseErrorHandler);\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.addListener = function (listener) {\n        var _this = this;\n        this.listeners.push(listener);\n        return function () {\n            _this._removeListener(listener);\n        };\n    };\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype._removeListener = function (listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    };\n    ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\n        return this.unexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport function readonly(name) {\n    return name\n        ? new Error(\"readonly property '\" + name + \" cannot be changed'\")\n        : new Error('readonly property cannot be changed');\n}\nexport function disposed(what) {\n    var result = new Error(what + \" has been disposed\");\n    result.name = 'DISPOSED';\n    return result;\n}\nexport function isErrorWithActions(obj) {\n    return obj instanceof Error && Array.isArray(obj.actions);\n}\nexport function create(message, options) {\n    if (options === void 0) { options = Object.create(null); }\n    var result = new Error(message);\n    if (options.actions) {\n        result.actions = options.actions;\n    }\n    return result;\n}\nexport function getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n    }\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = undefined;\n        this._last = undefined;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this.insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this.insert(element, true);\n    };\n    LinkedList.prototype.insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        return function () {\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\n                if (candidate !== newNode) {\n                    continue;\n                }\n                if (candidate.prev && candidate.next) {\n                    // middle\n                    var anchor = candidate.prev;\n                    anchor.next = candidate.next;\n                    candidate.next.prev = anchor;\n                }\n                else if (!candidate.prev && !candidate.next) {\n                    // only node\n                    _this._first = undefined;\n                    _this._last = undefined;\n                }\n                else if (!candidate.next) {\n                    // last\n                    _this._last = _this._last.prev;\n                    _this._last.next = undefined;\n                }\n                else if (!candidate.prev) {\n                    // first\n                    _this._first = _this._first.next;\n                    _this._first.prev = undefined;\n                }\n                // done\n                break;\n            }\n        };\n    };\n    LinkedList.prototype.iterator = function () {\n        var element = {\n            done: undefined,\n            value: undefined,\n        };\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    element.done = true;\n                    element.value = undefined;\n                }\n                else {\n                    element.done = false;\n                    element.value = node.element;\n                    node = node.next;\n                }\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node instanceof Node; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toDisposable, combinedDisposable, empty as EmptyDisposable } from './lifecycle.js';\nimport { TPromise } from './winjs.base.js';\nimport { once as onceFn } from './functional.js';\nimport { onUnexpectedError } from './errors.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n})(Event || (Event = {}));\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(_options) {\n        this._options = _options;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\n                                    _this._options.onLastListenerRemove(_this);\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        e.listener.dispose();\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\nexport function fromCallback(fn) {\n    var listener;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () { return listener = fn(function (e) { return emitter.fire(e); }); },\n        onLastListenerRemove: function () { return listener.dispose(); }\n    });\n    return emitter.event;\n}\nexport function fromPromise(promise) {\n    var emitter = new Emitter();\n    var shouldEmit = false;\n    promise\n        .then(null, function () { return null; })\n        .then(function () {\n        if (!shouldEmit) {\n            setTimeout(function () { return emitter.fire(); }, 0);\n        }\n        else {\n            emitter.fire();\n        }\n    });\n    shouldEmit = true;\n    return emitter.event;\n}\nexport function toPromise(event) {\n    return new TPromise(function (complete) {\n        var sub = event(function (e) {\n            sub.dispose();\n            complete(e);\n        });\n    });\n}\nexport function once(event) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        var result = event(function (e) {\n            result.dispose();\n            return listener.call(thisArgs, e);\n        }, null, disposables);\n        return result;\n    };\n}\nexport function anyEvent() {\n    var events = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        events[_i] = arguments[_i];\n    }\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n    };\n}\nexport function debounceEvent(event, merger, delay, leading) {\n    if (delay === void 0) { delay = 100; }\n    if (leading === void 0) { leading = false; }\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            subscription = event(function (cur) {\n                numDebouncedCalls++;\n                output = merger(output, cur);\n                if (leading && !handle) {\n                    emitter.fire(output);\n                }\n                clearTimeout(handle);\n                handle = setTimeout(function () {\n                    var _output = output;\n                    output = undefined;\n                    handle = undefined;\n                    if (!leading || numDebouncedCalls > 1) {\n                        emitter.fire(_output);\n                    }\n                    numDebouncedCalls = 0;\n                }, delay);\n            });\n        },\n        onLastListenerRemove: function () {\n            subscription.dispose();\n        }\n    });\n    return emitter.event;\n}\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, void 0, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\nexport function mapEvent(event, map) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n    };\n}\nexport function forEach(event, each) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n    };\n}\nexport function filterEvent(event, filter) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n    };\n}\nvar ChainableEvent = /** @class */ (function () {\n    function ChainableEvent(_event) {\n        this._event = _event;\n    }\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\n        get: function () { return this._event; },\n        enumerable: true,\n        configurable: true\n    });\n    ChainableEvent.prototype.map = function (fn) {\n        return new ChainableEvent(mapEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.forEach = function (fn) {\n        return new ChainableEvent(forEach(this._event, fn));\n    };\n    ChainableEvent.prototype.filter = function (fn) {\n        return new ChainableEvent(filterEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.latch = function () {\n        return new ChainableEvent(latch(this._event));\n    };\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n        return this._event(listener, thisArgs, disposables);\n    };\n    return ChainableEvent;\n}());\nexport function chain(event) {\n    return new ChainableEvent(event);\n}\nexport function stopwatch(event) {\n    var start = new Date().getTime();\n    return mapEvent(once(event), function (_) { return new Date().getTime() - start; });\n}\n/**\n * Buffers the provided event until a first listener comes\n * along, at which point fire all the events at once and\n * pipe the event from then on.\n *\n * ```typescript\n * const emitter = new Emitter<number>();\n * const event = emitter.event;\n * const bufferedEvent = buffer(event);\n *\n * emitter.fire(1);\n * emitter.fire(2);\n * emitter.fire(3);\n * // nothing...\n *\n * const listener = bufferedEvent(num => console.log(num));\n * // 1, 2, 3\n *\n * emitter.fire(4);\n * // 4\n * ```\n */\nexport function buffer(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    var listener = event(function (e) {\n        if (buffer) {\n            buffer.push(e);\n        }\n        else {\n            emitter.fire(e);\n        }\n    });\n    var flush = function () {\n        buffer.forEach(function (e) { return emitter.fire(e); });\n        buffer = null;\n    };\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            if (!listener) {\n                listener = event(function (e) { return emitter.fire(e); });\n            }\n        },\n        onFirstListenerDidAdd: function () {\n            if (buffer) {\n                if (nextTick) {\n                    setTimeout(flush);\n                }\n                else {\n                    flush();\n                }\n            }\n        },\n        onLastListenerRemove: function () {\n            listener.dispose();\n            listener = null;\n        }\n    });\n    return emitter.event;\n}\n/**\n * Similar to `buffer` but it buffers indefinitely and repeats\n * the buffered events to every new listener.\n */\nexport function echo(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    event(function (e) {\n        buffer.push(e);\n        emitter.fire(e);\n    });\n    var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n    var emitter = new Emitter({\n        onListenerDidAdd: function (emitter, listener, thisArgs) {\n            if (nextTick) {\n                setTimeout(function () { return flush(listener, thisArgs); });\n            }\n            else {\n                flush(listener, thisArgs);\n            }\n        }\n    });\n    return emitter.event;\n}\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        this.emitter = new Emitter();\n        this.event = this.emitter.event;\n        this.disposable = EmptyDisposable;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.disposable.dispose();\n            this.disposable = event(this.emitter.fire, this.emitter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.disposable.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\nexport function fromNodeEventEmitter(emitter, eventName, map) {\n    if (map === void 0) { map = function (id) { return id; }; }\n    var fn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return result.fire(map.apply(void 0, args));\n    };\n    var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n    var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n    var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n    return result.event;\n}\nexport function latch(event) {\n    var firstCall = true;\n    var cache;\n    return filterEvent(event, function (value) {\n        var shouldEmit = firstCall || value !== cache;\n        firstCall = false;\n        cache = value;\n        return shouldEmit;\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\n    }\n    return createSimpleKeybinding(firstPart, OS);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.type = 1 /* Simple */;\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        if (other.type !== 1 /* Simple */) {\n            return false;\n        }\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.getHashCode = function () {\n        var ctrl = this.ctrlKey ? '1' : '0';\n        var shift = this.shiftKey ? '1' : '0';\n        var alt = this.altKey ? '1' : '0';\n        var meta = this.metaKey ? '1' : '0';\n        return \"\" + ctrl + shift + alt + meta + this.keyCode;\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(firstPart, chordPart) {\n        this.type = 2 /* Chord */;\n        this.firstPart = firstPart;\n        this.chordPart = chordPart;\n    }\n    ChordKeybinding.prototype.getHashCode = function () {\n        return this.firstPart.getHashCode() + \";\" + this.chordPart.getHashCode();\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Range } from './range.js';\nimport { Position } from './position.js';\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Event, Emitter } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection, SelectionDirection } from '../core/selection.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Token } from '../core/token.js';\nimport URI from '../../../base/common/uri.js';\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nexport var Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        Severity: Severity,\n        MarkerSeverity: MarkerSeverity,\n        Promise: TPromise,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from '../../../base/common/uri.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../model/wordHelper.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { globals } from '../../../base/common/platform.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj = {\n            done: false,\n            value: ''\n        };\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                obj.done = false;\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                obj.done = true;\n                obj.value = undefined;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n            return obj;\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeDirtyDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return TPromise.as(edits);\n        }\n        var result = [];\n        var lastEol;\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (!range) {\n                // eol-change only\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: undefined, range: undefined });\n        }\n        return TPromise.as(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return TPromise.as(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (model) {\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var seen = Object.create(null);\n            seen[currentWord] = true;\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true,\n                    overwriteBefore: currentWord.length\n                });\n            }\n            return TPromise.as({ suggestions: suggestions });\n        }\n        return undefined;\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        var word = null;\n        if (wordRange !== null) {\n            word = model.getValueInRange(wordRange);\n        }\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return TPromise.as(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var prop in this._foreignModule) {\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        return new TPromise(function (c, e) {\n            require([moduleId], function (foreignModule) {\n                _this._foreignModule = foreignModule.create(ctx, createData);\n                var methods = [];\n                for (var prop in _this._foreignModule) {\n                    if (typeof _this._foreignModule[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                c(methods);\n            }, e);\n        });\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as errors from './errors.js';\nimport { Promise, TPromise } from './winjs.base.js';\nimport { CancellationTokenSource } from './cancellation.js';\nimport { Disposable } from './lifecycle.js';\nimport { Emitter } from './event.js';\nexport function isPromiseLike(obj) {\n    return obj && typeof obj.then === 'function';\n}\nexport function toPromiseLike(arg) {\n    if (isPromiseLike(arg)) {\n        return arg;\n    }\n    else {\n        return TPromise.as(arg);\n    }\n}\nexport function asWinJsPromise(callback) {\n    var source = new CancellationTokenSource();\n    return new TPromise(function (resolve, reject, progress) {\n        var item = callback(source.token);\n        if (item instanceof TPromise) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            }, progress);\n        }\n        else if (isPromiseLike(item)) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            });\n        }\n        else {\n            source.dispose();\n            resolve(item);\n        }\n    }, function () {\n        source.cancel();\n    });\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n    if (resolveAsUndefinedWhenCancelled) {\n        promise = promise.then(undefined, function (err) {\n            if (!errors.isPromiseCanceledError(err)) {\n                return TPromise.wrapError(err);\n            }\n            return undefined;\n        });\n    }\n    return always(promise, function () { return subscription.dispose(); });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nvar Throttler = /** @class */ (function () {\n    function Throttler() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    Throttler.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                var onComplete_1 = function () {\n                    _this.queuedPromise = null;\n                    var result = _this.queue(_this.queuedPromiseFactory);\n                    _this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new TPromise(function (c, e, p) {\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                }, function () {\n                    _this.activePromise.cancel();\n                });\n            }\n            return new TPromise(function (c, e, p) {\n                _this.queuedPromise.then(c, e, p);\n            }, function () {\n                // no-op\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new TPromise(function (c, e, p) {\n            _this.activePromise.done(function (result) {\n                _this.activePromise = null;\n                c(result);\n            }, function (err) {\n                _this.activePromise = null;\n                e(err);\n            }, p);\n        }, function () {\n            _this.activePromise.cancel();\n        });\n    };\n    return Throttler;\n}());\nexport { Throttler };\n// TODO@Joao: can the previous throttler be replaced with this?\nvar SimpleThrottler = /** @class */ (function () {\n    function SimpleThrottler() {\n        this.current = TPromise.wrap(null);\n    }\n    SimpleThrottler.prototype.queue = function (promiseTask) {\n        return this.current = this.current.then(function () { return promiseTask(); });\n    };\n    return SimpleThrottler;\n}());\nexport { SimpleThrottler };\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onSuccess = null;\n        this.task = null;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new TPromise(function (c) {\n                _this.onSuccess = c;\n            }, function () {\n                // no-op\n            }).then(function () {\n                _this.completionPromise = null;\n                _this.onSuccess = null;\n                var task = _this.task;\n                _this.task = null;\n                return task();\n            });\n        }\n        this.timeout = setTimeout(function () {\n            _this.timeout = null;\n            _this.onSuccess(null);\n        }, delay);\n        return this.completionPromise;\n    };\n    Delayer.prototype.isTriggered = function () {\n        return this.timeout !== null;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.completionPromise.cancel();\n            this.completionPromise = null;\n        }\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    };\n    return Delayer;\n}());\nexport { Delayer };\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nvar ThrottledDelayer = /** @class */ (function (_super) {\n    __extends(ThrottledDelayer, _super);\n    function ThrottledDelayer(defaultDelay) {\n        var _this = _super.call(this, defaultDelay) || this;\n        _this.throttler = new Throttler();\n        return _this;\n    }\n    ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n        var _this = this;\n        return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\n    };\n    return ThrottledDelayer;\n}(Delayer));\nexport { ThrottledDelayer };\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nvar Barrier = /** @class */ (function () {\n    function Barrier() {\n        var _this = this;\n        this._isOpen = false;\n        this._promise = new TPromise(function (c, e, p) {\n            _this._completePromise = c;\n        }, function () {\n            console.warn('You should really not try to cancel this ready promise!');\n        });\n    }\n    Barrier.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    Barrier.prototype.open = function () {\n        this._isOpen = true;\n        this._completePromise(true);\n    };\n    Barrier.prototype.wait = function () {\n        return this._promise;\n    };\n    return Barrier;\n}());\nexport { Barrier };\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\n    __extends(ShallowCancelThenPromise, _super);\n    function ShallowCancelThenPromise(outer) {\n        var _this = this;\n        var completeCallback, errorCallback, progressCallback;\n        _this = _super.call(this, function (c, e, p) {\n            completeCallback = c;\n            errorCallback = e;\n            progressCallback = p;\n        }, function () {\n            // cancel this promise but not the\n            // outer promise\n            errorCallback(errors.canceled());\n        }) || this;\n        outer.then(completeCallback, errorCallback, progressCallback);\n        return _this;\n    }\n    return ShallowCancelThenPromise;\n}(TPromise));\nexport { ShallowCancelThenPromise };\n/**\n * Replacement for `WinJS.Promise.timeout`.\n */\nexport function timeout(n) {\n    return new Promise(function (resolve) { return setTimeout(resolve, n); });\n}\nfunction isWinJSPromise(candidate) {\n    return TPromise.is(candidate) && typeof candidate.done === 'function';\n}\nexport function always(winjsPromiseOrPromiseLike, f) {\n    if (isWinJSPromise(winjsPromiseOrPromiseLike)) {\n        return new TPromise(function (c, e, p) {\n            winjsPromiseOrPromiseLike.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            winjsPromiseOrPromiseLike.cancel();\n        });\n    }\n    else {\n        // simple\n        winjsPromiseOrPromiseLike.then(function (_) { return f(); }, function (_) { return f(); });\n        return winjsPromiseOrPromiseLike;\n    }\n}\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nexport function sequence(promiseFactories) {\n    var results = [];\n    // reverse since we start with last element using pop()\n    promiseFactories = promiseFactories.reverse();\n    function next() {\n        if (promiseFactories.length) {\n            return promiseFactories.pop()();\n        }\n        return null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        var n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return TPromise.as(results);\n    }\n    return TPromise.as(null).then(thenHandler);\n}\nexport function first(promiseFactories, shouldStop) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    promiseFactories = promiseFactories.reverse().slice();\n    var loop = function () {\n        if (promiseFactories.length === 0) {\n            return TPromise.as(null);\n        }\n        var factory = promiseFactories.pop();\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return TPromise.as(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nvar Limiter = /** @class */ (function () {\n    function Limiter(maxDegreeOfParalellism) {\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onFinished = new Emitter();\n    }\n    Object.defineProperty(Limiter.prototype, \"onFinished\", {\n        get: function () {\n            return this._onFinished.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Limiter.prototype, \"size\", {\n        get: function () {\n            return this.runningPromises + this.outstandingPromises.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Limiter.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        return new TPromise(function (c, e, p) {\n            _this.outstandingPromises.push({\n                factory: promiseFactory,\n                c: c,\n                e: e,\n                p: p\n            });\n            _this.consume();\n        });\n    };\n    Limiter.prototype.consume = function () {\n        var _this = this;\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            var iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            var promise = iLimitedTask.factory();\n            promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n            promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\n        }\n    };\n    Limiter.prototype.consumed = function () {\n        this.runningPromises--;\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n        else {\n            this._onFinished.fire();\n        }\n    };\n    Limiter.prototype.dispose = function () {\n        this._onFinished.dispose();\n    };\n    return Limiter;\n}());\nexport { Limiter };\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nvar Queue = /** @class */ (function (_super) {\n    __extends(Queue, _super);\n    function Queue() {\n        return _super.call(this, 1) || this;\n    }\n    return Queue;\n}(Limiter));\nexport { Queue };\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nvar ResourceQueue = /** @class */ (function () {\n    function ResourceQueue() {\n        this.queues = Object.create(null);\n    }\n    ResourceQueue.prototype.queueFor = function (resource) {\n        var _this = this;\n        var key = resource.toString();\n        if (!this.queues[key]) {\n            var queue_1 = new Queue();\n            queue_1.onFinished(function () {\n                queue_1.dispose();\n                delete _this.queues[key];\n            });\n            this.queues[key] = queue_1;\n        }\n        return this.queues[key];\n    };\n    return ResourceQueue;\n}());\nexport { ResourceQueue };\nexport function setDisposableTimeout(handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\n    return { dispose: function () { clearTimeout(handle); } };\n}\nvar TimeoutTimer = /** @class */ (function (_super) {\n    __extends(TimeoutTimer, _super);\n    function TimeoutTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    TimeoutTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    TimeoutTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    };\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n        var _this = this;\n        this.cancel();\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n        var _this = this;\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    return TimeoutTimer;\n}(Disposable));\nexport { TimeoutTimer };\nvar IntervalTimer = /** @class */ (function (_super) {\n    __extends(IntervalTimer, _super);\n    function IntervalTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    IntervalTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    IntervalTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    };\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n        this.cancel();\n        this._token = setInterval(function () {\n            runner();\n        }, interval);\n    };\n    return IntervalTimer;\n}(Disposable));\nexport { IntervalTimer };\nvar RunOnceScheduler = /** @class */ (function () {\n    function RunOnceScheduler(runner, timeout) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = timeout;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    RunOnceScheduler.prototype.dispose = function () {\n        this.cancel();\n        this.runner = null;\n    };\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    RunOnceScheduler.prototype.cancel = function () {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    };\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    RunOnceScheduler.prototype.schedule = function (delay) {\n        if (delay === void 0) { delay = this.timeout; }\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    };\n    /**\n     * Returns true if scheduled.\n     */\n    RunOnceScheduler.prototype.isScheduled = function () {\n        return this.timeoutToken !== -1;\n    };\n    RunOnceScheduler.prototype.onTimeout = function () {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.runner();\n        }\n    };\n    return RunOnceScheduler;\n}());\nexport { RunOnceScheduler };\nexport function nfcall(fn) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return new TPromise(function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\nexport function ninvoke(thisArg, fn) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return new TPromise(function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\n/**\n * An emitter that will ignore any events that occur during a specific code\n * execution triggered via throttle() until the promise has finished (either\n * successfully or with an error). Only after the promise has finished, the\n * last event that was fired during the operation will get emitted.\n *\n */\nvar ThrottledEmitter = /** @class */ (function (_super) {\n    __extends(ThrottledEmitter, _super);\n    function ThrottledEmitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ThrottledEmitter.prototype.throttle = function (promise) {\n        var _this = this;\n        this.suspended = true;\n        return always(promise, function () { return _this.resume(); });\n    };\n    ThrottledEmitter.prototype.fire = function (event) {\n        if (this.suspended) {\n            this.lastEvent = event;\n            this.hasLastEvent = true;\n            return;\n        }\n        return _super.prototype.fire.call(this, event);\n    };\n    ThrottledEmitter.prototype.resume = function () {\n        this.suspended = false;\n        if (this.hasLastEvent) {\n            this.fire(this.lastEvent);\n        }\n        this.hasLastEvent = false;\n        this.lastEvent = void 0;\n    };\n    return ThrottledEmitter;\n}(Emitter));\nexport { ThrottledEmitter };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { TPromise } from '../winjs.base.js';\nimport { ShallowCancelThenPromise } from '../async.js';\nimport { isWeb } from '../platform.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var req = String(++this._lastSentReq);\n        var reply = {\n            c: null,\n            e: null\n        };\n        var result = new TPromise(function (c, e, p) {\n            reply.c = c;\n            reply.e = e;\n        }, function () {\n            // Cancel not supported\n        });\n        this._pendingReplies[req] = reply;\n        this._send({\n            vsWorker: this._workerId,\n            req: req,\n            method: method,\n            args: args\n        });\n        return result;\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.e(err);\n                return;\n            }\n            reply.c(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyFulfill = null;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject(err);\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return TPromise.as(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        _this._lazyProxy = new TPromise(function (c, e, p) {\n            lazyProxyFulfill = c;\n            lazyProxyReject = e;\n        }, function () { });\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._onModuleLoaded.then(function (availableMethods) {\n            var proxy = {};\n            for (var i = 0; i < availableMethods.length; i++) {\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n            }\n            lazyProxyFulfill(proxy);\n        }, function (e) {\n            lazyProxyReject(e);\n            _this._onError('Worker failed to load ' + moduleId, e);\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        // Do not allow chaining promises to cancel the proxy creation\n        return new ShallowCancelThenPromise(this._lazyProxy);\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new TPromise(function (c, e, p) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(c, e);\n            }, e);\n        }, function () {\n            // Cancel intentionally not supported\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var prop in this._requestHandler) {\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        var cc;\n        var ee;\n        var r = new TPromise(function (c, e, p) {\n            cc = c;\n            ee = e;\n        });\n        // Use the global require to be sure to get the global config\n        self.require([moduleId], function () {\n            var result = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                result[_i] = arguments[_i];\n            }\n            var handlerModule = result[0];\n            _this._requestHandler = handlerModule.create();\n            var methods = [];\n            for (var prop in _this._requestHandler) {\n                if (typeof _this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            cc(methods);\n        }, ee);\n        return r;\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","function webpackEmptyContext(req) {\n\tvar e = new Error('Cannot find module \"' + req + '\".');\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"ChvI\";","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = undefined;\nvar _translationsConfigFile = undefined;\nexport var LANGUAGE_DEFAULT = 'en';\n// OS detection\nif (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nexport var Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nvar _platform = Platform.Web;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = Platform.Mac;\n    }\n    else if (_isWindows) {\n        _platform = Platform.Windows;\n    }\n    else if (_isLinux) {\n        _platform = Platform.Linux;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nexport var platform = _platform;\nexport function isRootUser() {\n    return _isNative && !_isWindows && (process.getuid() === 0);\n}\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport var language = _language;\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport var locale = _locale;\n/**\n * The translatios that are available through language packs.\n */\nexport var translationsConfigFile = _translationsConfigFile;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nexport var Promise = __winjs_exports.Promise;\nexport var TPromise = __winjs_exports.TPromise;\nexport var PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"],"sourceRoot":""}